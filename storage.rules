rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    match /profile_photos/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /group_avatars/staged/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /message_media/{conversationId}/{fileName} {
      allow read, write: if request.auth != null &&
        firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
        firestore.get(/databases/(default)/documents/conversations/$(conversationId))
          .data.participants.hasAny([request.auth.uid]);
    }

    match /group_avatars/{conversationId}/{fileName} {
      allow read, write: if request.auth != null &&
        firestore.exists(/databases/(default)/documents/conversations/$(conversationId)) &&
        firestore.get(/databases/(default)/documents/conversations/$(conversationId))
          .data.participants.hasAny([request.auth.uid]);
    }

    // Default deny for all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
